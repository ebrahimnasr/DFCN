# Enter your network definition here.
# Use Shift+Enter to update the visualization.
# Enter your network definition here.
# Use Shift+Enter to update the visualization.
# Enter your network definition here.
# Use Shift+Enter to update the visualization.

name: "DFCN"
input: "GlobalPatch"
  input_shape{
	dim: 1
	dim: 3
	dim: 283 #change the size of image here
	dim: 283
}


layer {
  name: "G_L1_C1"
  type: "Convolution"
  bottom: "GlobalPatch"
  top: "G_L1_C1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    pad: 64
    num_output: 32
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'G_L1_C1'	top: 'G_L1_C1'  name: 'G_L1_C1_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'G_L1_C1' top: 'G_L1_C1' name: 'G_L1_C1_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#183*183*32

layer {
  name: "relu_G_L1_C1"
  type: "ReLU"
  bottom: "G_L1_C1"
  top: "G_L1_C1"
}

layer {
  name: "G_L1_C2"
  type: "Convolution"
  bottom: "G_L1_C1"
  top: "G_L1_C2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'G_L1_C2'	top: 'G_L1_C2'  name: 'G_L1_C2_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'G_L1_C2' top: 'G_L1_C2' name: 'G_L1_C2_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#181*181*32

layer {
  name: "relu_G_L1_C2"
  type: "ReLU"
  bottom: "G_L1_C2"
  top: "G_L1_C2"
}




layer {
  name: "G_L1_P_1"
  type: "Pooling"
  bottom: "G_L1_C2"
  top: "G_L1_P_1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 1

  }
}
#180*180*
layer {
  type: "ReshapePooling"
  name: "reshape_G_L1_P_1"
  top:  "G_L1_P"
  bottom: "G_L1_P_1"
  crop_param {
    num_cat: 0
  }

}
#180*180*32


#=================================================================================================================


layer {
  name: "G_L2_C1"
  type: "Convolution"
  bottom: "G_L1_P"
  top: "G_L2_C1_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 4
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'G_L2_C1_T'	top: 'G_L2_C1_T'  name: 'G_L2_C1_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'G_L2_C1_T' top: 'G_L2_C1_T' name: 'G_L2_C1_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#177*177*32



layer {
  type: "DeleteInvalidConvdata"
  name: "valid_G_L2_C1"
  top:  "G_L2_C1"
  bottom: "G_L2_C1_T"
  crop_param {
    num_cat: 1
    filter_size: 4
  }
}
#174*174*32

layer {
  name: "relu_G_L2_C1"
  type: "ReLU"
  bottom: "G_L2_C1"
  top: "G_L2_C1"
}

layer {
  name: "G_L2_C2"
  type: "Convolution"
  bottom: "G_L2_C1"
  top: "G_L2_C2_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'G_L2_C2_T'	top: 'G_L2_C2_T'  name: 'G_L2_C2_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'G_L2_C2_T' top: 'G_L2_C2_T' name: 'G_L2_C2_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#172*172*32
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_G_L2_C2"
  top:  "G_L2_C2"
  bottom: "G_L2_C2_T"
  crop_param {
    num_cat: 1
    filter_size: 3
  }
}
#170*170*32

layer {
  name: "relu_G_L2_C2"
  type: "ReLU"
  bottom: "G_L2_C2"
  top: "G_L2_C2"
}


layer {
  name: "G_L2_P_1"
  type: "Pooling"
  bottom: "G_L2_C2"
  top: "G_L2_P_1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 1

  }
}
#169*169*
layer {
  type: "ReshapePooling"
  name: "reshape_G_L2_P_1"
  top:  "G_L2_P"
  bottom: "G_L2_P_1"
  crop_param {
    num_cat: 1
  }
}
#168*168*32

#=================================================================================================================

layer {
  name: "G_L3_C1"
  type: "Convolution"
  bottom: "G_L2_P"
  top: "G_L3_C1_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 4
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'G_L3_C1_T'	top: 'G_L3_C1_T'  name: 'G_L3_C1_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'G_L3_C1_T' top: 'G_L3_C1_T' name: 'G_L3_C1_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#165*165*32
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_G_L3_C1"
  top:  "G_L3_C1"
  bottom: "G_L3_C1_T"
  crop_param {
    num_cat: 2
    filter_size: 4
  }
}
#156*156*32
layer {
  name: "relu_G_L3_C1"
  type: "ReLU"
  bottom: "G_L3_C1"
  top: "G_L3_C1"
}


layer {
  name: "G_L3_C2"
  type: "Convolution"
  bottom: "G_L3_C1"
  top: "G_L3_C2_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'G_L3_C2_T'	top: 'G_L3_C2_T'  name: 'G_L3_C2_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'G_L3_C2_T' top: 'G_L3_C2_T' name: 'G_L3_C2_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#154*154*32
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_G_L3_C2"
  top:  "G_L3_C2"
  bottom: "G_L3_C2_T"
  crop_param {
    num_cat: 2
    filter_size: 3
  }
}
#148*148*32

layer {
  name: "relu_G_L3_C2"
  type: "ReLU"
  bottom: "G_L3_C2"
  top: "G_L3_C2"
}


layer {
  name: "G_L3_P_1"
  type: "Pooling"
  bottom: "G_L3_C2"
  top: "G_L3_P_1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 1

  }
}
#147*147*
layer {
  type: "ReshapePooling"
  name: "reshape_G_L3_P_1"
  top:  "G_L3_P"
  bottom: "G_L3_P_1"
  crop_param {
    num_cat: 2
  }
}
#144*144*32

#=================================================================================================================



layer {
  name: "G_L4_C1"
  type: "Convolution"
  bottom: "G_L3_P"
  top: "G_L4_C1_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 4
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'G_L4_C1_T'	top: 'G_L4_C1_T'  name: 'G_L4_C1_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'G_L4_C1_T' top: 'G_L4_C1_T' name: 'G_L4_C1_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#141*141*32
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_G_L4_C1"
	  top:  "G_L4_C1"
  bottom: "G_L4_C1_T"
  crop_param {
    num_cat: 3
    filter_size: 4
  }
}
#120*120*32


layer {
  name: "relu_G_L4_C1"
  type: "ReLU"
  bottom: "G_L4_C1"
  top: "G_L4_C1"
}



layer {
  name: "G_L4_C2"
  type: "Convolution"
  bottom: "G_L4_C1"
  top: "G_L4_C2_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'G_L4_C2_T'	top: 'G_L4_C2_T'  name: 'G_L4_C2_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'G_L4_C2_T' top: 'G_L4_C2_T' name: 'G_L4_C2_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#118*118*32
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_G_L4_C2"
  top:  "G_L4_C2"
  bottom: "G_L4_C2_T"
  crop_param {
    num_cat: 3
    filter_size: 3
  }
}
#104*104*32



layer {
  name: "relu_G_L4_C2"
  type: "ReLU"
  bottom: "G_L4_C2"
  top: "G_L4_C2"
}



layer {
  name: "G_L4_P_1"
  type: "Pooling"
  bottom: "G_L4_C2"
  top: "G_L4_P_1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 1

  }
}
#103*103*
layer {
  type: "ReshapePooling"
  name: "reshape_G_L4_P_1"
  top:  "G_L4_P"
  bottom: "G_L4_P_1"
  crop_param {
    num_cat: 3
  }
}
#96*96*32

#=================================================================================================================
layer {
  name: "G_L5_C1"
  type: "Convolution"
  bottom: "G_L4_P"
  top: "G_L5_C1_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'G_L5_C1_T'	top: 'G_L5_C1_T'  name: 'G_L5_C1_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'G_L5_C1_T' top: 'G_L5_C1_T' name: 'G_L5_C1_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#94*94*64
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_G_L5_C1"
  top:  "G_L5_C1"
  bottom: "G_L5_C1_T"
  crop_param {
    num_cat: 4
    filter_size: 3
  }
}
#64*64*64


layer {
  name: "relu_G_L5_C1"
  type: "ReLU"
  bottom: "G_L5_C1"
  top: "G_L5_C1"
}



layer {
  name: "G_L5_C2"
  type: "Convolution"
  bottom: "G_L5_C1"
  top: "G_L5_C2_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'G_L5_C2_T'	top: 'G_L5_C2_T'  name: 'G_L5_C2_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'G_L5_C2_T' top: 'G_L5_C2_T' name: 'G_L5_C2_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#62*62*64
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_G_L5_C2"
  top:  "G_L5_C2"
  bottom: "G_L5_C2_T"
  crop_param {
    num_cat: 4
    filter_size: 3
  }
}

layer {
  name: "relu_G_L5_C2"
  type: "ReLU"
  bottom: "G_L5_C2"
  top: "G_L5_C2"
}
#32*32*64
#====================================================================================
#======================================CROP==========================================
#====================================================================================
layer {
  type: "CropDense"
  name: "crop_L_L1_C1"
  top:  "crop_L_L1_C1"
  bottom: "GlobalPatch"
  crop_param {
    num_cat: 0
    crop_offset: 11
  }
}
#36*36*3


layer {
  name: "LC_L1_C1"
  type: "Convolution"
  bottom: "crop_L_L1_C1"
  top: "LC_L1_C1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 4
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'LC_L1_C1'	top: 'LC_L1_C1'  name: 'LC_L1_C1_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'LC_L1_C1' top: 'LC_L1_C1' name: 'LC_L1_C1_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#34*34*64

layer {
  name: "relu_LC_L1_C1"
  type: "ReLU"
  bottom: "LC_L1_C1"
  top: "LC_L1_C1"
}




layer {
  name: "LC_L1_C2"
  type: "Convolution"
  bottom: "LC_L1_C1"
  top: "LC_L1_C2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32

    kernel_size: 3
    stride: 1
   weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer { 
	bottom: 'LC_L1_C2'	top: 'LC_L1_C2'  name: 'LC_L1_C2_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'LC_L1_C2' top: 'LC_L1_C2' name: 'LC_L1_C2_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
layer {
  name: "relu_LC_L1_C2"
  type: "ReLU"
  bottom: "LC_L1_C2"
  top: "LC_L1_C2"
}
#32*32*64
#====================================================================================
#======================================CROP==========================================
#====================================================================================
layer {
  type: "CropDense"
  name: "crop_L_L2_C1"
  top:  "crop_L_L2_C1"
  bottom: "G_L1_P"
  crop_param {
    num_cat: 1
    crop_offset: 35
  }
}
#110*110*


layer {
  name: "LC_L2_C1"
  type: "Convolution"
  bottom: "crop_L_L2_C1"
  top: "LC_L2_C1_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'LC_L2_C1_T'	top: 'LC_L2_C1_T'  name: 'LC_L2_C1_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'LC_L2_C1_T' top: 'LC_L2_C1_T' name: 'LC_L2_C1_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#108*108*64
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_LC_L2_C1"
  top:  "LC_L2_C1"
  bottom: "LC_L2_C1_T"
  crop_param {
    num_cat: 1
    filter_size: 3
  }
}
#106*106*64



layer {
  name: "relu_LC_L2_C1"
  type: "ReLU"
  bottom: "LC_L2_C1"
  top: "LC_L2_C1"
}



layer {
  name: "LC_L2_C2"
  type: "Convolution"
  bottom: "LC_L2_C1"
  top: "LC_L2_C2_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'LC_L2_C2_T'	top: 'LC_L2_C2_T'  name: 'LC_L2_C2_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'LC_L2_C2_T' top: 'LC_L2_C2_T' name: 'LC_L2_C2_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#104*104*64
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_LC_L2_C2"
  top:  "LC_L2_C2"
  bottom: "LC_L2_C2_T"
  crop_param {
    num_cat: 1
    filter_size: 3
  }
}

layer {
  name: "relu_LC_L2_C2"
  type: "ReLU"
  bottom: "LC_L2_C2"
  top: "LC_L2_C2"
}
#102*102*64
#====================================================================================
#======================================CROP==========================================
#====================================================================================
layer {
  type: "CropDense"
  name: "crop_L_L3_C1"
  top:  "crop_L_L3_C1"
  bottom: "G_L2_P"
  crop_param {
    num_cat: 2
    crop_offset: 15
  }
}
#108*108*


layer {
  name: "LC_L3_C1"
  type: "Convolution"
  bottom: "crop_L_L3_C1"
  top: "LC_L3_C1_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'LC_L3_C1_T'	top: 'LC_L3_C1_T'  name: 'LC_L3_C1_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'LC_L3_C1_T' top: 'LC_L3_C1_T' name: 'LC_L3_C1_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#106*106*64
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_LC_L3_C1"
  top:  "LC_L3_C1"
  bottom: "LC_L3_C1_T"
  crop_param {
    num_cat: 2
    filter_size: 3
  }
}
#100*100*64


layer {
  name: "relu_LC_L3_C1"
  type: "ReLU"
  bottom: "LC_L3_C1"
  top: "LC_L3_C1"
}


layer {
  name: "LC_L3_C2"
  type: "Convolution"
  bottom: "LC_L3_C1"
  top: "LC_L3_C2_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'LC_L3_C2_T'	top: 'LC_L3_C2_T'  name: 'LC_L3_C2_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'LC_L3_C2_T' top: 'LC_L3_C2_T' name: 'LC_L3_C2_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#98*98*64
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_LC_L3_C2"
  top:  "LC_L3_C2"
  bottom: "LC_L3_C2_T"
  crop_param {
    num_cat: 2
    filter_size: 3
  }
}
#92*92*64

layer {
  name: "relu_LC_L3_C2"
  type: "ReLU"
  bottom: "LC_L3_C2"
  top: "LC_L3_C2"
}
#====================================================================================
#======================================CROP==========================================
#====================================================================================
layer {
  type: "CropDense"
  name: "crop_L_L4_C1"
  top:  "crop_L_L4_C1"
  bottom: "G_L3_P"
  crop_param {
    num_cat: 3
    crop_offset: 5
  }
}
#104*104*


layer {
  name: "LC_L4_C1"
  type: "Convolution"
  bottom: "crop_L_L4_C1"
  top: "LC_L4_C1_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'LC_L4_C1_T'	top: 'LC_L4_C1_T'  name: 'LC_L4_C1_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'LC_L4_C1_T' top: 'LC_L4_C1_T' name: 'LC_L4_C1_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}

#102*102*64
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_LC_L4_C1"
  top:  "LC_L4_C1"
  bottom: "LC_L4_C1_T"
  crop_param {
    num_cat: 3
    filter_size: 3
  }
}
#88*88*64

layer {
  name: "relu_LC_L4_C1"
  type: "ReLU"
  bottom: "LC_L4_C1"
  top: "LC_L4_C1"
}






layer {
  name: "LC_L4_C2"
  type: "Convolution"
  bottom: "LC_L4_C1"
  top: "LC_L4_C2_T"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'LC_L4_C2_T'	top: 'LC_L4_C2_T'  name: 'LC_L4_C2_T_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'LC_L4_C2_T' top: 'LC_L4_C2_T' name: 'LC_L4_C2_T_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}
#86*86*64
layer {
  type: "DeleteInvalidConvdata"
  name: "valid_LC_L4_C2"
  top:  "LC_L4_C2"
  bottom: "LC_L4_C2_T"
  crop_param {
    num_cat: 3
    filter_size: 3
  }
}
#72*72*64

layer {
  name: "relu_LC_L4_C2"
  type: "ReLU"
  bottom: "LC_L4_C2"
  top: "LC_L4_C2"
}
#====================================================================================
#======================================Concat========================================
#====================================================================================
layer {
  type: "Restore"
  name: "Restore_LC_L1_C2"
  top:  "Restore_LC_L1_C2"
  bottom: "LC_L1_C2"
  crop_param {
    num_cat: 0
  }
}
#32*32*64
layer {
  type: "Restore"
  name: "Restore_LC_L2_C2"
  top:  "Restore_LC_L2_C2"
  bottom: "LC_L2_C2"
  crop_param {
    num_cat: 1
  }
}



#102*102*64
layer {
  type: "Restore"
  name: "Restore_LC_L3_C2"
  top:  "Restore_LC_L3_C2"
  bottom: "LC_L3_C2"
  crop_param {
    num_cat: 2
  }
}
#92*92*64
layer {
  type: "Restore"
  name: "Restore_LC_L4_C2"
  top:  "Restore_LC_L4_C2"
  bottom: "LC_L4_C2"
  crop_param {
    num_cat: 3
  }
}
#72*72*64
layer {
  type: "Restore"
  name: "Restore_G_L5_C2"
  top:  "Restore_G_L5_C2"
  bottom: "G_L5_C2"
  crop_param {
    num_cat: 4
  }
}
#32*32*64
layer {
  type: "Concat"
  name: "Concat_Features"
  top:  "feature"
  bottom: "Restore_LC_L1_C2"
  bottom: "Restore_LC_L2_C2"
  bottom: "Restore_LC_L3_C2"
  bottom: "Restore_LC_L4_C2"
  bottom: "Restore_G_L5_C2"
}

layer {
  name: "drop_FC1"
  type: "Dropout"
  bottom: "feature"
  top: "feature"
  dropout_param {
    dropout_ratio: 0.2
  }
}

layer {
  name: "FC1_conv"
  type: "Convolution"
  bottom: "feature"
  top: "FC1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
	bottom: 'FC1'	top: 'FC1'  name: 'FC1_BN' type: 'BatchNorm'
  	batch_norm_param {use_global_stats: false  moving_average_fraction: 0.999 }
 	param { lr_mult: 0 } 
  	param { lr_mult: 0 } 
     }
layer{
 	bottom: 'FC1' top: 'FC1' name: 'FC1_SC' type: 'Scale'
  	scale_param { bias_term: true    axis: 1      num_axes: 1    filler { type: 'constant' value: 1 }         
    	bias_filler { type: 'constant' value: 0.001 }  # initialize bias
      }
}

layer {
  name: "relu_FC1"
  type: "ReLU"
  bottom: "FC1"
  top: "FC1"
}



layer {
  name: "FC2"
  type: "Convolution"
  bottom: "FC1"
  top: "FC2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}




layer {
  name: "prob"
  type: "Softmax"
  bottom: "FC2"
  top: "prob"
}



